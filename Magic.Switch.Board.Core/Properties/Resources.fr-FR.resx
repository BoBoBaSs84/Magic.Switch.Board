<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Enum_LogLevel_Critical_Description" xml:space="preserve">
    <value>Journaux qui décrivent une application irrécupérable ou une panne système, ou une défaillance catastrophique nécessitant une attention immédiate.</value>
  </data>
  <data name="Enum_LogLevel_Debug_Description" xml:space="preserve">
    <value>Journaux utilisés pour l’investigation interactive pendant le développement. Ces journaux doivent principalement contenir des informations utiles pour le débogage et n’avoir aucune valeur à long terme.</value>
  </data>
  <data name="Enum_LogLevel_Error_Description" xml:space="preserve">
    <value>Journaux qui mettent en évidence lorsque le flux d’exécution actuel est arrêté en raison d’une défaillance. Ceux-ci doivent indiquer un échec dans l’activité en cours, et non un échec à l’échelle de l’application.</value>
  </data>
  <data name="Enum_LogLevel_Information_Description" xml:space="preserve">
    <value>Journaux qui suivent le flux général de l’application. Ces journaux devraient avoir une valeur à long terme.</value>
  </data>
  <data name="Enum_LogLevel_None_Description" xml:space="preserve">
    <value>Non utilisé pour écrire des messages de journal. Spécifie qu’une catégorie de journalisation ne doit écrire aucun message.</value>
  </data>
  <data name="Enum_LogLevel_Trace_Description" xml:space="preserve">
    <value>Journaux contenant les messages les plus détaillés. Ces messages peuvent contenir des données d’application sensibles. Ces messages sont désactivés par défaut et ne doivent jamais être activés dans un environnement de production.</value>
  </data>
  <data name="Enum_LogLevel_Warning_Description" xml:space="preserve">
    <value>Journaux qui mettent en évidence un événement anormal ou inattendu dans le flux d’application, mais qui n’entraînent pas autrement l’arrêt de l’exécution de l’application.</value>
  </data>
  <data name="Enum_LoopChannel_1_Name" xml:space="preserve">
    <value>Canal de boucle 1</value>
  </data>
  <data name="Enum_LoopChannel_2_Name" xml:space="preserve">
    <value>Canal de boucle 2</value>
  </data>
  <data name="Enum_LoopChannel_3_Name" xml:space="preserve">
    <value>Canal de boucle 3</value>
  </data>
  <data name="Enum_LoopChannel_4_Name" xml:space="preserve">
    <value>Canal de boucle 4</value>
  </data>
  <data name="Enum_LoopChannel_5_Name" xml:space="preserve">
    <value>Canal de boucle 5</value>
  </data>
  <data name="Enum_LoopChannel_6_Name" xml:space="preserve">
    <value>Canal de boucle 6</value>
  </data>
  <data name="Enum_LoopChannel_7_Name" xml:space="preserve">
    <value>Canal de boucle 7</value>
  </data>
  <data name="Enum_LoopChannel_8_Name" xml:space="preserve">
    <value>Canal de boucle 8</value>
  </data>
  <data name="Enum_MidiChannel_1_Name" xml:space="preserve">
    <value>Canal Midi 1</value>
  </data>
  <data name="Enum_MidiChannel_10_Name" xml:space="preserve">
    <value>Canal Midi 10</value>
  </data>
  <data name="Enum_MidiChannel_11_Name" xml:space="preserve">
    <value>Canal Midi 11</value>
  </data>
  <data name="Enum_MidiChannel_12_Name" xml:space="preserve">
    <value>Canal Midi 12</value>
  </data>
  <data name="Enum_MidiChannel_13_Name" xml:space="preserve">
    <value>Canal Midi 13</value>
  </data>
  <data name="Enum_MidiChannel_14_Name" xml:space="preserve">
    <value>Canal Midi 14</value>
  </data>
  <data name="Enum_MidiChannel_15_Name" xml:space="preserve">
    <value>Canal Midi 15</value>
  </data>
  <data name="Enum_MidiChannel_16_Name" xml:space="preserve">
    <value>Canal Midi 16</value>
  </data>
  <data name="Enum_MidiChannel_2_Name" xml:space="preserve">
    <value>Canal Midi 2</value>
  </data>
  <data name="Enum_MidiChannel_3_Name" xml:space="preserve">
    <value>Canal Midi 3</value>
  </data>
  <data name="Enum_MidiChannel_4_Name" xml:space="preserve">
    <value>Canal Midi 4</value>
  </data>
  <data name="Enum_MidiChannel_5_Name" xml:space="preserve">
    <value>Canal Midi 5</value>
  </data>
  <data name="Enum_MidiChannel_6_Name" xml:space="preserve">
    <value>Canal Midi 6</value>
  </data>
  <data name="Enum_MidiChannel_7_Name" xml:space="preserve">
    <value>Canal Midi 7</value>
  </data>
  <data name="Enum_MidiChannel_8_Name" xml:space="preserve">
    <value>Canal Midi 8</value>
  </data>
  <data name="Enum_MidiChannel_9_Name" xml:space="preserve">
    <value>Canal Midi 9</value>
  </data>
  <data name="Enum_MidiMessageType_CCM_Name" xml:space="preserve">
    <value>Message de modification du contrôle</value>
  </data>
  <data name="Enum_MidiMessageType_PCM_Name" xml:space="preserve">
    <value>Message de modification du programme</value>
  </data>
  <data name="Enum_SwitchChannel_1_Name" xml:space="preserve">
    <value>Commutateur Canal 1</value>
  </data>
  <data name="Enum_SwitchChannel_2_Name" xml:space="preserve">
    <value>Commutateur Canal 2</value>
  </data>
  <data name="Enum_SwitchChannel_3_Name" xml:space="preserve">
    <value>Commutateur Canal 3</value>
  </data>
  <data name="Enum_SwitchChannel_4_Name" xml:space="preserve">
    <value>Commutateur Canal 4</value>
  </data>
  <data name="Enum_SwitchChannel_5_Name" xml:space="preserve">
    <value>Commutateur Canal 5</value>
  </data>
  <data name="Enum_SwitchChannel_6_Name" xml:space="preserve">
    <value>Commutateur Canal 6</value>
  </data>
  <data name="Enum_SwitchChannel_7_Name" xml:space="preserve">
    <value>Commutateur Canal 7</value>
  </data>
  <data name="Enum_SwitchChannel_8_Name" xml:space="preserve">
    <value>Commutateur Canal 8</value>
  </data>
  <data name="Error_Xml_Unknown_Attribute" xml:space="preserve">
    <value>Erreur lors de la désérialisation. Attribut Unkown trouvé. Nom: « {0} » à la ligne: {1} et position: {2}.</value>
  </data>
  <data name="Error_Xml_Unknown_Element" xml:space="preserve">
    <value>Erreur lors de la désérialisation. Élément inconnu trouvé. Nom: « {0} » à la ligne: {1} et position: {2}.</value>
  </data>
  <data name="Error_Xml_Unknown_Node" xml:space="preserve">
    <value>Erreur lors de la désérialisation. Nœud inconnu trouvé. Nom: « {0} » du type:«{1} »</value>
  </data>
  <data name="File_Service_Error_Directory" xml:space="preserve">
    <value>Le répertoire n'a pas pu être trouvé.</value>
  </data>
  <data name="File_Service_Error_File" xml:space="preserve">
    <value>Le fichier n'a pas pu être trouvé.</value>
  </data>
  <data name="File_Service_File_Created" xml:space="preserve">
    <value>Le fichier '{0}' a été créé.</value>
  </data>
  <data name="File_Service_File_Deleted" xml:space="preserve">
    <value>Le fichier '{0}' a été supprimé.</value>
  </data>
  <data name="File_Service_File_Read" xml:space="preserve">
    <value>Le fichier '{0}' a été chargé.</value>
  </data>
  <data name="Model_Field_Range_Generic" xml:space="preserve">
    <value>{0} doit être compris entre {2} et {1}.</value>
  </data>
  <data name="Model_Field_Required_Generic" xml:space="preserve">
    <value>{0} est un champ obligatoire.</value>
  </data>
  <data name="Model_Field_StringLength_Generic" xml:space="preserve">
    <value>{0} doit comporter entre {2} et {1} caractères.</value>
  </data>
</root>