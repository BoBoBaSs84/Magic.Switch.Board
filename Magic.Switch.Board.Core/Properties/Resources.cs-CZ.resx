<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Enum_LogLevel_Critical_Description" xml:space="preserve">
    <value>Protokoly, které popisují neopravitelnou chybu aplikace nebo systému nebo závažné selhání, které vyžaduje okamžitou pozornost.</value>
  </data>
  <data name="Enum_LogLevel_Debug_Description" xml:space="preserve">
    <value>Protokoly, které se používají pro interaktivní šetření během vývoje. Tyto protokoly by měly primárně obsahovat informace užitečné pro ladění a neměly by mít žádnou dlouhodobou hodnotu.</value>
  </data>
  <data name="Enum_LogLevel_Error_Description" xml:space="preserve">
    <value>Protokoly, které zvýrazní, když je aktuální tok provádění zastaven z důvodu selhání. Ty by měly indikovat selhání v aktuální aktivitě, nikoli selhání celé aplikace.</value>
  </data>
  <data name="Enum_LogLevel_Information_Description" xml:space="preserve">
    <value>Protokoly, které sledují obecný tok aplikace. Tyto protokoly by měly mít dlouhodobou hodnotu.</value>
  </data>
  <data name="Enum_LogLevel_None_Description" xml:space="preserve">
    <value>Nepoužívá se pro psaní zpráv protokolu. Určuje, že kategorie protokolování by neměla psát žádné zprávy.</value>
  </data>
  <data name="Enum_LogLevel_Trace_Description" xml:space="preserve">
    <value>Protokoly, které obsahují nejpodrobnější zprávy. Tyto zprávy mohou obsahovat citlivá data aplikace. Tyto zprávy jsou ve výchozím nastavení zakázány a v provozním prostředí by nikdy neměly být povoleny.</value>
  </data>
  <data name="Enum_LogLevel_Warning_Description" xml:space="preserve">
    <value>Protokoly, které zvýrazňují neobvyklou nebo neočekávanou událost v toku aplikace, ale jinak nezpůsobují zastavení provádění aplikace.</value>
  </data>
  <data name="Enum_LoopChannel_1_Name" xml:space="preserve">
    <value>Smyčkový kanál 1</value>
  </data>
  <data name="Enum_LoopChannel_2_Name" xml:space="preserve">
    <value>Smyčkový kanál 2</value>
  </data>
  <data name="Enum_LoopChannel_3_Name" xml:space="preserve">
    <value>Smyčkový kanál 3</value>
  </data>
  <data name="Enum_LoopChannel_4_Name" xml:space="preserve">
    <value>Smyčkový kanál 4</value>
  </data>
  <data name="Enum_LoopChannel_5_Name" xml:space="preserve">
    <value>Smyčkový kanál 5</value>
  </data>
  <data name="Enum_LoopChannel_6_Name" xml:space="preserve">
    <value>Smyčkový kanál 6</value>
  </data>
  <data name="Enum_LoopChannel_7_Name" xml:space="preserve">
    <value>Smyčkový kanál 7</value>
  </data>
  <data name="Enum_LoopChannel_8_Name" xml:space="preserve">
    <value>Smyčkový kanál 8</value>
  </data>
  <data name="Enum_MidiChannel_1_Name" xml:space="preserve">
    <value>Midi kanál 1</value>
  </data>
  <data name="Enum_MidiChannel_10_Name" xml:space="preserve">
    <value>Midi kanál 10</value>
  </data>
  <data name="Enum_MidiChannel_11_Name" xml:space="preserve">
    <value>Midi kanál 11</value>
  </data>
  <data name="Enum_MidiChannel_12_Name" xml:space="preserve">
    <value>Midi kanál 12</value>
  </data>
  <data name="Enum_MidiChannel_13_Name" xml:space="preserve">
    <value>Midi kanál 13</value>
  </data>
  <data name="Enum_MidiChannel_14_Name" xml:space="preserve">
    <value>Midi kanál 14</value>
  </data>
  <data name="Enum_MidiChannel_15_Name" xml:space="preserve">
    <value>Midi kanál 15</value>
  </data>
  <data name="Enum_MidiChannel_16_Name" xml:space="preserve">
    <value>Midi kanál 16</value>
  </data>
  <data name="Enum_MidiChannel_2_Name" xml:space="preserve">
    <value>Midi kanál 2</value>
  </data>
  <data name="Enum_MidiChannel_3_Name" xml:space="preserve">
    <value>Midi kanál 3</value>
  </data>
  <data name="Enum_MidiChannel_4_Name" xml:space="preserve">
    <value>Midi kanál 4</value>
  </data>
  <data name="Enum_MidiChannel_5_Name" xml:space="preserve">
    <value>Midi kanál 5</value>
  </data>
  <data name="Enum_MidiChannel_6_Name" xml:space="preserve">
    <value>Midi kanál 6</value>
  </data>
  <data name="Enum_MidiChannel_7_Name" xml:space="preserve">
    <value>Midi kanál 7</value>
  </data>
  <data name="Enum_MidiChannel_8_Name" xml:space="preserve">
    <value>Midi kanál 8</value>
  </data>
  <data name="Enum_MidiChannel_9_Name" xml:space="preserve">
    <value>Midi kanál 9</value>
  </data>
  <data name="Enum_MidiMessageType_CCM_Name" xml:space="preserve">
    <value>Zpráva o změně ovládacího prvku</value>
  </data>
  <data name="Enum_MidiMessageType_PCM_Name" xml:space="preserve">
    <value>Zpráva o změně programu</value>
  </data>
  <data name="Enum_SwitchChannel_1_Name" xml:space="preserve">
    <value>Přepnout kanál 1</value>
  </data>
  <data name="Enum_SwitchChannel_2_Name" xml:space="preserve">
    <value>Přepnout kanál 2</value>
  </data>
  <data name="Enum_SwitchChannel_3_Name" xml:space="preserve">
    <value>Přepnout kanál 3</value>
  </data>
  <data name="Enum_SwitchChannel_4_Name" xml:space="preserve">
    <value>Spínací kanál 4</value>
  </data>
  <data name="Enum_SwitchChannel_5_Name" xml:space="preserve">
    <value>Přepněte kanál 5</value>
  </data>
  <data name="Enum_SwitchChannel_6_Name" xml:space="preserve">
    <value>Přepnout kanál 6</value>
  </data>
  <data name="Enum_SwitchChannel_7_Name" xml:space="preserve">
    <value>Přepínací kanál 7</value>
  </data>
  <data name="Enum_SwitchChannel_8_Name" xml:space="preserve">
    <value>Přepnout kanál 8</value>
  </data>
  <data name="Error_Xml_Unknown_Attribute" xml:space="preserve">
    <value>Chyba během deserializace. Byl nalezen neznámý atribut. Jméno: "{0}" na řádku: {1} a pozice: {2}.</value>
  </data>
  <data name="Error_Xml_Unknown_Element" xml:space="preserve">
    <value>Chyba během deserializace. Nalezen neznámý prvek. Jméno: "{0}" na řádku: {1} a pozice: {2}.</value>
  </data>
  <data name="Error_Xml_Unknown_Node" xml:space="preserve">
    <value>Chyba během deserializace. Byl nalezen neznámý uzel. Název: "{0}" typu "{1}"</value>
  </data>
  <data name="File_Service_Error_Directory" xml:space="preserve">
    <value>Adresář nebyl nalezen.</value>
  </data>
  <data name="File_Service_Error_File" xml:space="preserve">
    <value>Soubor nebyl nalezen.</value>
  </data>
  <data name="File_Service_File_Created" xml:space="preserve">
    <value>Byl vytvořen soubor '{0}'.</value>
  </data>
  <data name="File_Service_File_Deleted" xml:space="preserve">
    <value>Soubor "{0}" byl odstraněn.</value>
  </data>
  <data name="File_Service_File_Read" xml:space="preserve">
    <value>Soubor "{0}" byl načten.</value>
  </data>
  <data name="Model_Field_Range_Generic" xml:space="preserve">
    <value>{0} musí být v rozmezí od {2} do {1}.</value>
  </data>
  <data name="Model_Field_Required_Generic" xml:space="preserve">
    <value>{0} je povinné pole.</value>
  </data>
  <data name="Model_Field_StringLength_Generic" xml:space="preserve">
    <value>{0} musí být dlouhý mezi {2} a {1} znaky.</value>
  </data>
</root>