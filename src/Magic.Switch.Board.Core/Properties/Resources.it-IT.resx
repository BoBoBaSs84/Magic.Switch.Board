<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Enum_LogLevel_Critical_Description" xml:space="preserve">
    <value>Registri che descrivono un'applicazione o un arresto anomalo del sistema irreversibile o un errore irreversibile che richiede attenzione immediata.</value>
  </data>
  <data name="Enum_LogLevel_Critical_Name" xml:space="preserve">
    <value>Critico</value>
  </data>
  <data name="Enum_LogLevel_Debug_Description" xml:space="preserve">
    <value>Registri utilizzati per l'indagine interattiva durante lo sviluppo. Questi registri devono contenere principalmente informazioni utili per il debug e non hanno alcun valore a lungo termine.</value>
  </data>
  <data name="Enum_LogLevel_Debug_Name" xml:space="preserve">
    <value>Debug</value>
  </data>
  <data name="Enum_LogLevel_Error_Description" xml:space="preserve">
    <value>Log che evidenziano quando il flusso corrente di esecuzione viene interrotto a causa di un errore. Questi dovrebbero indicare un errore nell'attività corrente, non un errore a livello di applicazione.</value>
  </data>
  <data name="Enum_LogLevel_Error_Name" xml:space="preserve">
    <value>Errore</value>
  </data>
  <data name="Enum_LogLevel_Information_Description" xml:space="preserve">
    <value>Registri che tengono traccia del flusso generale dell'applicazione. Questi registri dovrebbero avere un valore a lungo termine.</value>
  </data>
  <data name="Enum_LogLevel_Information_Name" xml:space="preserve">
    <value>Informazione</value>
  </data>
  <data name="Enum_LogLevel_None_Description" xml:space="preserve">
    <value>Non utilizzato per la scrittura di messaggi di registro. Specifica che una categoria di registrazione non deve scrivere alcun messaggio.</value>
  </data>
  <data name="Enum_LogLevel_None_Name" xml:space="preserve">
    <value>Nessuno</value>
  </data>
  <data name="Enum_LogLevel_Trace_Description" xml:space="preserve">
    <value>Registri che contengono i messaggi più dettagliati. Questi messaggi possono contenere dati sensibili dell'applicazione. Questi messaggi sono disabilitati per impostazione predefinita e non devono mai essere abilitati in un ambiente di produzione.</value>
  </data>
  <data name="Enum_LogLevel_Trace_Name" xml:space="preserve">
    <value>Traccia</value>
  </data>
  <data name="Enum_LogLevel_Warning_Description" xml:space="preserve">
    <value>Log che evidenziano un evento anomalo o imprevisto nel flusso dell'applicazione, ma che non causano altrimenti l'arresto dell'esecuzione dell'applicazione.</value>
  </data>
  <data name="Enum_LogLevel_Warning_Name" xml:space="preserve">
    <value>Avvertimento</value>
  </data>
  <data name="Enum_LoopChannel_1_Name" xml:space="preserve">
    <value>Loop Canale 1</value>
  </data>
  <data name="Enum_LoopChannel_2_Name" xml:space="preserve">
    <value>Loop Canale 2</value>
  </data>
  <data name="Enum_LoopChannel_3_Name" xml:space="preserve">
    <value>Loop Canale 3</value>
  </data>
  <data name="Enum_LoopChannel_4_Name" xml:space="preserve">
    <value>Loop Canale 4</value>
  </data>
  <data name="Enum_LoopChannel_5_Name" xml:space="preserve">
    <value>Loop Canale 5</value>
  </data>
  <data name="Enum_LoopChannel_6_Name" xml:space="preserve">
    <value>Loop Canale 6</value>
  </data>
  <data name="Enum_LoopChannel_7_Name" xml:space="preserve">
    <value>Loop Canale 7</value>
  </data>
  <data name="Enum_LoopChannel_8_Name" xml:space="preserve">
    <value>Loop Canale 8</value>
  </data>
  <data name="Enum_MidiChannel_10_Name" xml:space="preserve">
    <value>Midi Canale 10</value>
  </data>
  <data name="Enum_MidiChannel_11_Name" xml:space="preserve">
    <value>Canale Midi 11</value>
  </data>
  <data name="Enum_MidiChannel_12_Name" xml:space="preserve">
    <value>Midi Canale 12</value>
  </data>
  <data name="Enum_MidiChannel_13_Name" xml:space="preserve">
    <value>Canale Midi 13</value>
  </data>
  <data name="Enum_MidiChannel_14_Name" xml:space="preserve">
    <value>Midi Canale 14</value>
  </data>
  <data name="Enum_MidiChannel_15_Name" xml:space="preserve">
    <value>Midi Canale 15</value>
  </data>
  <data name="Enum_MidiChannel_16_Name" xml:space="preserve">
    <value>Canale Midi 16</value>
  </data>
  <data name="Enum_MidiChannel_1_Name" xml:space="preserve">
    <value>Midi Canale 1</value>
  </data>
  <data name="Enum_MidiChannel_2_Name" xml:space="preserve">
    <value>Midi Canale 2</value>
  </data>
  <data name="Enum_MidiChannel_3_Name" xml:space="preserve">
    <value>Midi Canale 3</value>
  </data>
  <data name="Enum_MidiChannel_4_Name" xml:space="preserve">
    <value>Midi Canale 4</value>
  </data>
  <data name="Enum_MidiChannel_5_Name" xml:space="preserve">
    <value>Midi Canale 5</value>
  </data>
  <data name="Enum_MidiChannel_6_Name" xml:space="preserve">
    <value>Midi Canale 6</value>
  </data>
  <data name="Enum_MidiChannel_7_Name" xml:space="preserve">
    <value>Midi Canale 7</value>
  </data>
  <data name="Enum_MidiChannel_8_Name" xml:space="preserve">
    <value>Midi Canale 8</value>
  </data>
  <data name="Enum_MidiChannel_9_Name" xml:space="preserve">
    <value>Midi Canale 9</value>
  </data>
  <data name="Enum_MidiMessageType_CCM_Description" xml:space="preserve">
    <value>I messaggi di modifica del controllo vengono solitamente utilizzati per modificare i parametri delle funzioni o le funzioni di chiamata nei dispositivi Midi.</value>
  </data>
  <data name="Enum_MidiMessageType_CCM_Name" xml:space="preserve">
    <value>Messaggio di modifica del controllo</value>
  </data>
  <data name="Enum_MidiMessageType_CCM_ShortName" xml:space="preserve">
    <value>CCM</value>
  </data>
  <data name="Enum_MidiMessageType_PCM_Description" xml:space="preserve">
    <value>Il messaggio Di modifica del programma viene utilizzato per specificare il tipo di strumento che deve essere utilizzato per riprodurre i suoni su un determinato canale.</value>
  </data>
  <data name="Enum_MidiMessageType_PCM_Name" xml:space="preserve">
    <value>Messaggio di modifica del programma</value>
  </data>
  <data name="Enum_MidiMessageType_PCM_ShortName" xml:space="preserve">
    <value>PCM</value>
  </data>
  <data name="Enum_SwitchChannel_1_Name" xml:space="preserve">
    <value>Cambia canale 1</value>
  </data>
  <data name="Enum_SwitchChannel_2_Name" xml:space="preserve">
    <value>Cambia canale 2</value>
  </data>
  <data name="Enum_SwitchChannel_3_Name" xml:space="preserve">
    <value>Cambia canale 3</value>
  </data>
  <data name="Enum_SwitchChannel_4_Name" xml:space="preserve">
    <value>Cambia canale 4</value>
  </data>
  <data name="Enum_SwitchChannel_5_Name" xml:space="preserve">
    <value>Cambia canale 5</value>
  </data>
  <data name="Enum_SwitchChannel_6_Name" xml:space="preserve">
    <value>Cambia canale 6</value>
  </data>
  <data name="Enum_SwitchChannel_7_Name" xml:space="preserve">
    <value>Cambia canale 7</value>
  </data>
  <data name="Enum_SwitchChannel_8_Name" xml:space="preserve">
    <value>Cambia canale 8</value>
  </data>
  <data name="Error_While_Creating_A_New_Device_Configuration" xml:space="preserve">
    <value>Errore durante la creazione di una nuova configurazione del dispositivo.</value>
  </data>
  <data name="Error_While_Creating_File" xml:space="preserve">
    <value>Errore durante la creazione del file. '{0}'</value>
  </data>
  <data name="Error_While_Deleting_File" xml:space="preserve">
    <value>Errore durante l'eliminazione del file. '{0}'</value>
  </data>
  <data name="Error_While_Fetching_Enum_List" xml:space="preserve">
    <value>Errore durante il recupero dell'elenco degli enumeratori.</value>
  </data>
  <data name="Error_While_Reading_A_Existing_Device_Configuration" xml:space="preserve">
    <value>Errore durante la lettura di una configurazione di dispositivo esistente.</value>
  </data>
  <data name="Error_While_Reading_File" xml:space="preserve">
    <value>Errore durante la lettura del file. '{0}'</value>
  </data>
  <data name="Error_While_Saving_Device_Configuration" xml:space="preserve">
    <value>Errore durante il salvataggio della configurazione del dispositivo.</value>
  </data>
  <data name="Error_Xml_Unknown_Attribute" xml:space="preserve">
    <value>Errore durante la deserializzazione. Attributo Sconosciuto trovato. Nome: '{0}' in linea: {1} e posizione: {2}.</value>
  </data>
  <data name="Error_Xml_Unknown_Element" xml:space="preserve">
    <value>Errore durante la deserializzazione. Elemento sconosciuto trovato. Nome: '{0}' in linea: {1} e posizione: {2}.</value>
  </data>
  <data name="Error_Xml_Unknown_Node" xml:space="preserve">
    <value>Errore durante la deserializzazione. Nodo sconosciuto trovato. Nome: '{0}' del tipo: '{1}'</value>
  </data>
  <data name="Error_Xml_Unreferenced_Object" xml:space="preserve">
    <value>Errore durante la deserializzazione. Oggetto non referenziato trovato, nome: '{0}' con id: {1}</value>
  </data>
  <data name="File_Service_Error_Directory" xml:space="preserve">
    <value>La directory non è stata trovata.</value>
  </data>
  <data name="File_Service_Error_File" xml:space="preserve">
    <value>Il file non è stato trovato.</value>
  </data>
  <data name="File_Service_File_Created" xml:space="preserve">
    <value>Il file '{0}' è stato creato.</value>
  </data>
  <data name="File_Service_File_Deleted" xml:space="preserve">
    <value>Il file "{0}" è stato eliminato.</value>
  </data>
  <data name="File_Service_File_Read" xml:space="preserve">
    <value>Il file '{0}' è stato caricato.</value>
  </data>
  <data name="Model_Field_MaxLength_Generic" xml:space="preserve">
    <value>{0} non può essere più lungo di {1} caratteri.</value>
  </data>
  <data name="Model_Field_Range_Generic" xml:space="preserve">
    <value>{0} deve essere compreso in un intervallo tra {2} e {1}.</value>
  </data>
  <data name="Model_Field_Required_Generic" xml:space="preserve">
    <value>{0} è un campo obbligatorio.</value>
  </data>
  <data name="Model_Field_StringLength_Generic" xml:space="preserve">
    <value>{0} deve avere una lunghezza compresa tra {2} e {1} caratteri.</value>
  </data>
</root>